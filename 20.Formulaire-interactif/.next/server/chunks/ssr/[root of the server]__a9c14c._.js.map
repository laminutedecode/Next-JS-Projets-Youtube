{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Utilisateur/Desktop/my-app/app/dashboard/page.tsx"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\r\nimport { User } from '../types/user'\r\n\r\nconst prisma = new PrismaClient()\r\n\r\nexport default async function DashboardPage() {\r\n  const users = await prisma.user.findMany()\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-12\">\r\n      <div className=\"container mx-auto\">\r\n        <h1 className=\"text-3xl font-bold text-center mb-8\">Dashboard</h1>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {users.map((user: User) => (\r\n            <div key={user.id} className=\"bg-white p-6 rounded-lg shadow\">\r\n              <h2 className=\"text-xl font-bold mb-4\">{user.prenom} {user.nom}</h2>\r\n              <p className=\"text-gray-600 mb-2\">{user.email}</p>\r\n              <p className=\"text-gray-600 mb-2\">{user.description}</p>\r\n              <p className=\"text-gray-600 mb-2\">Poste: {user.job}</p>\r\n              <p className=\"text-gray-600 mb-2\">\r\n                Technologies: {JSON.parse(user.technologies).join(', ')}\r\n              </p>\r\n              {user.url_github && (\r\n                <a href={user.url_github} className=\"text-blue-500 hover:underline block\">\r\n                  GitHub\r\n                </a>\r\n              )}\r\n              {user.url_youtube && (\r\n                <a href={user.url_youtube} className=\"text-blue-500 hover:underline block\">\r\n                  YouTube\r\n                </a>\r\n              )}\r\n              {user.url_site && (\r\n                <a href={user.url_site} className=\"text-blue-500 hover:underline block\">\r\n                  Site Web\r\n                </a>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n} "],"names":[],"mappings":";;;;AAAA;;;AAGA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAEhB,eAAe;IAC5B,MAAM,QAAQ,MAAM,OAAO,IAAI,CAAC,QAAQ;IAExC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAsC;;;;;;8BACpD,8OAAC;oBAAI,WAAU;8BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;4BAAkB,WAAU;;8CAC3B,8OAAC;oCAAG,WAAU;;wCAA0B,KAAK,MAAM;wCAAC;wCAAE,KAAK,GAAG;;;;;;;8CAC9D,8OAAC;oCAAE,WAAU;8CAAsB,KAAK,KAAK;;;;;;8CAC7C,8OAAC;oCAAE,WAAU;8CAAsB,KAAK,WAAW;;;;;;8CACnD,8OAAC;oCAAE,WAAU;;wCAAqB;wCAAQ,KAAK,GAAG;;;;;;;8CAClD,8OAAC;oCAAE,WAAU;;wCAAqB;wCACjB,KAAK,KAAK,CAAC,KAAK,YAAY,EAAE,IAAI,CAAC;;;;;;;gCAEnD,KAAK,UAAU,kBACd,8OAAC;oCAAE,MAAM,KAAK,UAAU;oCAAE,WAAU;8CAAsC;;;;;;gCAI3E,KAAK,WAAW,kBACf,8OAAC;oCAAE,MAAM,KAAK,WAAW;oCAAE,WAAU;8CAAsC;;;;;;gCAI5E,KAAK,QAAQ,kBACZ,8OAAC;oCAAE,MAAM,KAAK,QAAQ;oCAAE,WAAU;8CAAsC;;;;;;;2BAnBlE,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;AA6B7B"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Utilisateur/Desktop/my-app/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}